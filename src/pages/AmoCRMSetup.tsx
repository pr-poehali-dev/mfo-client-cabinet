import { useState, useEffect } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Alert, AlertDescription } from '@/components/ui/alert';
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion';
import Icon from '@/components/ui/icon';

const AmoCRMSetup = () => {
  const [step, setStep] = useState<'info' | 'token'>('info');

  useEffect(() => {
    const urlParams = new URLSearchParams(window.location.search);
    const authCode = urlParams.get('code');
    if (authCode) {
      setCode(authCode);
    }
  }, []);
  const [subdomain, setSubdomain] = useState('stepanmalik88');
  const [clientId, setClientId] = useState('d71f2423-d72b-4589-95dc-f28927138046');
  const [clientSecret, setClientSecret] = useState('');
  const [code, setCode] = useState('');
  const [redirectUri, setRedirectUri] = useState('https://poehali.dev/amocrm-setup');
  const [accessToken, setAccessToken] = useState('');
  const [refreshToken, setRefreshToken] = useState('');
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');
  const [testResult, setTestResult] = useState<{success: boolean; message: string} | null>(null);
  const [testLoading, setTestLoading] = useState(false);

  const handleGetToken = async () => {
    if (!subdomain || !clientId || !clientSecret || !code || !redirectUri) {
      setError('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
      return;
    }

    setLoading(true);
    setError('');

    try {
      const response = await fetch(
        'https://functions.poehali.dev/06bc6704-e76c-4833-9904-f61f7519ea8e',
        {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            subdomain,
            client_id: clientId,
            client_secret: clientSecret,
            code,
            redirect_uri: redirectUri
          })
        }
      );

      const data = await response.json();

      if (data.success) {
        setAccessToken(data.access_token);
        setRefreshToken(data.refresh_token);
        setStep('token');
      } else {
        setError(data.error || '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω');
      }
    } catch (err) {
      console.error('OAuth error:', err);
      setError('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ AmoCRM');
    } finally {
      setLoading(false);
    }
  };

  const copyToClipboard = (text: string) => {
    navigator.clipboard.writeText(text);
  };

  const handleTestConnection = async () => {
    setTestLoading(true);
    setTestResult(null);

    try {
      const response = await fetch(
        `https://functions.poehali.dev/6e80b3d4-1759-415b-bd93-5e37f93088a5?phone=79991234567`
      );
      
      const data = await response.json();

      if (response.ok) {
        setTestResult({
          success: true,
          message: `–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ! –ù–∞–π–¥–µ–Ω–æ —Å–¥–µ–ª–æ–∫: ${data.total_deals || 0}`
        });
      } else if (response.status === 404) {
        setTestResult({
          success: true,
          message: '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç! (–¢–µ—Å—Ç–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, –Ω–æ —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ)'
        });
      } else if (response.status === 401) {
        setTestResult({
          success: false,
          message: '–¢–æ–∫–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω. –ü—Ä–æ–π–¥–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –∑–∞–Ω–æ–≤–æ –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç–µ —Ç–æ–∫–µ–Ω.'
        });
      } else if (data.error?.includes('credentials')) {
        setTestResult({
          success: false,
          message: '–°–µ–∫—Ä–µ—Ç—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã. –î–æ–±–∞–≤—å—Ç–µ ACCESS_TOKEN –∏ AMOCRM_DOMAIN –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞.'
        });
      } else {
        setTestResult({
          success: false,
          message: data.error || '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ AmoCRM'
        });
      }
    } catch (err) {
      console.error('Test connection error:', err);
      setTestResult({
        success: false,
        message: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ'
      });
    } finally {
      setTestLoading(false);
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-[#1a1a2e] via-[#16213e] to-[#0f1419] flex items-center justify-center p-4">
      <Card className="w-full max-w-2xl border-border/50 bg-card/50 backdrop-blur-sm">
        <CardHeader className="text-center">
          <div className="w-16 h-16 mx-auto mb-4 rounded-2xl bg-gradient-to-r from-primary to-secondary flex items-center justify-center">
            <Icon name="Settings" size={32} className="text-white" />
          </div>
          <CardTitle className="text-3xl font-montserrat">
            –ù–∞—Å—Ç—Ä–æ–π–∫–∞ AmoCRM
          </CardTitle>
          <CardDescription>
            –ü–æ–ª—É—á–∏—Ç–µ Access Token –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å AmoCRM
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="mb-6">
            <Button
              onClick={handleTestConnection}
              disabled={testLoading}
              variant="outline"
              className="w-full"
            >
              {testLoading ? (
                <>
                  <Icon name="Loader2" size={20} className="mr-2 animate-spin" />
                  –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...
                </>
              ) : (
                <>
                  <Icon name="Wifi" size={20} className="mr-2" />
                  –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ AmoCRM
                </>
              )}
            </Button>
            
            {testResult && (
              <Alert className={`mt-4 ${testResult.success ? 'bg-accent/10 border-accent/30' : 'bg-destructive/10 border-destructive/30'}`}>
                <Icon name={testResult.success ? 'CheckCircle' : 'AlertCircle'} size={18} className={testResult.success ? 'text-accent' : 'text-destructive'} />
                <AlertDescription className={testResult.success ? 'text-accent' : 'text-destructive'}>
                  {testResult.message}
                </AlertDescription>
              </Alert>
            )}
          </div>

          {step === 'info' ? (
            <div className="space-y-6">
              <Accordion type="single" collapsible className="mb-6">
                <AccordionItem value="instruction" className="border border-blue-500/30 rounded-lg px-4 bg-blue-500/5">
                  <AccordionTrigger className="text-blue-100 hover:text-blue-50">
                    <div className="flex items-center gap-2">
                      <Icon name="BookOpen" size={18} />
                      <strong>üìñ –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: –ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –≤ AmoCRM</strong>
                    </div>
                  </AccordionTrigger>
                  <AccordionContent className="text-sm text-gray-300 space-y-4 pt-4">
                    <div className="space-y-3">
                      <div className="bg-white/5 rounded-lg p-4 border border-white/10">
                        <h4 className="font-bold text-white mb-2 flex items-center gap-2">
                          <span className="bg-primary text-white rounded-full w-6 h-6 flex items-center justify-center text-xs">1</span>
                          –í–æ–π–¥–∏—Ç–µ –≤ AmoCRM
                        </h4>
                        <p>–û—Ç–∫—Ä–æ–π—Ç–µ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç AmoCRM: <code className="bg-white/10 px-2 py-1 rounded">https://–≤–∞—à-–ø–æ–¥–¥–æ–º–µ–Ω.amocrm.ru</code></p>
                      </div>

                      <div className="bg-white/5 rounded-lg p-4 border border-white/10">
                        <h4 className="font-bold text-white mb-2 flex items-center gap-2">
                          <span className="bg-primary text-white rounded-full w-6 h-6 flex items-center justify-center text-xs">2</span>
                          –û—Ç–∫—Ä–æ–π—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π
                        </h4>
                        <ul className="list-disc ml-6 space-y-1">
                          <li>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ <strong>–∏–∫–æ–Ω–∫—É –ø—Ä–æ—Ñ–∏–ª—è</strong> (–ø—Ä–∞–≤—ã–π –≤–µ—Ä—Ö–Ω–∏–π —É–≥–æ–ª)</li>
                          <li>–í—ã–±–µ—Ä–∏—Ç–µ <strong>"–ù–∞—Å—Ç—Ä–æ–π–∫–∏"</strong></li>
                          <li>–í –ª–µ–≤–æ–º –º–µ–Ω—é –Ω–∞–π–¥–∏—Ç–µ —Ä–∞–∑–¥–µ–ª <strong>"–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏"</strong></li>
                        </ul>
                      </div>

                      <div className="bg-white/5 rounded-lg p-4 border border-white/10">
                        <h4 className="font-bold text-white mb-2 flex items-center gap-2">
                          <span className="bg-primary text-white rounded-full w-6 h-6 flex items-center justify-center text-xs">3</span>
                          –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é
                        </h4>
                        <ul className="list-disc ml-6 space-y-1">
                          <li>–ù–∞–∂–º–∏—Ç–µ <strong>"+ –°–æ–∑–¥–∞—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é"</strong> –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É</li>
                          <li>–í—ã–±–µ—Ä–∏—Ç–µ <strong>"–°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é"</strong></li>
                          <li>–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä: "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤")</li>
                        </ul>
                      </div>

                      <div className="bg-white/5 rounded-lg p-4 border border-white/10">
                        <h4 className="font-bold text-white mb-2 flex items-center gap-2">
                          <span className="bg-primary text-white rounded-full w-6 h-6 flex items-center justify-center text-xs">4</span>
                          –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Redirect URI
                        </h4>
                        <p className="mb-2">–í –ø–æ–ª–µ <strong>"Redirect URI"</strong> –≤—Å—Ç–∞–≤—å—Ç–µ:</p>
                        <code className="block bg-black/30 px-3 py-2 rounded border border-primary/30 text-primary">https://poehali.dev/amocrm-setup</code>
                        <p className="mt-2 text-yellow-300">‚ö†Ô∏è –≠—Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ! –ë–µ–∑ –Ω–µ–≥–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç.</p>
                      </div>

                      <div className="bg-white/5 rounded-lg p-4 border border-white/10">
                        <h4 className="font-bold text-white mb-2 flex items-center gap-2">
                          <span className="bg-primary text-white rounded-full w-6 h-6 flex items-center justify-center text-xs">5</span>
                          –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
                        </h4>
                        <p className="mb-2">–í–∫–ª—é—á–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è:</p>
                        <ul className="list-disc ml-6 space-y-1">
                          <li>‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç—ã: <strong>–ß—Ç–µ–Ω–∏–µ</strong> –∏ <strong>–ó–∞–ø–∏—Å—å</strong></li>
                          <li>‚úÖ –°–¥–µ–ª–∫–∏: <strong>–ß—Ç–µ–Ω–∏–µ</strong> –∏ <strong>–ó–∞–ø–∏—Å—å</strong></li>
                          <li>‚úÖ –ó–∞–¥–∞—á–∏: <strong>–ß—Ç–µ–Ω–∏–µ</strong> –∏ <strong>–ó–∞–ø–∏—Å—å</strong></li>
                          <li>‚úÖ –ü—Ä–∏–º–µ—á–∞–Ω–∏—è: <strong>–ß—Ç–µ–Ω–∏–µ</strong> –∏ <strong>–ó–∞–ø–∏—Å—å</strong></li>
                        </ul>
                      </div>

                      <div className="bg-white/5 rounded-lg p-4 border border-white/10">
                        <h4 className="font-bold text-white mb-2 flex items-center gap-2">
                          <span className="bg-primary text-white rounded-full w-6 h-6 flex items-center justify-center text-xs">6</span>
                          –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é
                        </h4>
                        <p>–ù–∞–∂–º–∏—Ç–µ <strong>"–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"</strong> –≤–Ω–∏–∑—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã</p>
                      </div>

                      <div className="bg-white/5 rounded-lg p-4 border border-green-500/30">
                        <h4 className="font-bold text-green-400 mb-2 flex items-center gap-2">
                          <Icon name="CheckCircle" size={18} />
                          –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
                        </h4>
                        <p className="mb-2">–ü–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã —É–≤–∏–¥–∏—Ç–µ:</p>
                        <ul className="list-disc ml-6 space-y-1">
                          <li><strong>ID –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏</strong> (Client ID) - UUID —Ñ–æ—Ä–º–∞—Ç–∞</li>
                          <li><strong>–°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á</strong> (Client Secret) - –¥–ª–∏–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞</li>
                        </ul>
                        <p className="mt-2 text-green-300">‚úÖ –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –≤ –ø–æ–ª—è –Ω–∏–∂–µ!</p>
                      </div>
                    </div>
                  </AccordionContent>
                </AccordionItem>
              </Accordion>

              <Alert>
                <Icon name="Info" size={18} />
                <AlertDescription>
                  <strong>–ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</strong>
                  <ol className="list-decimal ml-4 mt-2 space-y-1 text-sm">
                    <li>–ó–∞–π–¥–∏—Ç–µ –≤ AmoCRM ‚Üí –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏</li>
                    <li>–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é</li>
                    <li>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ ID –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∏ –°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á</li>
                    <li>–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–±—É–¥–µ—Ç –Ω–∏–∂–µ)</li>
                    <li>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ–¥ –∏–∑ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏</li>
                  </ol>
                </AlertDescription>
              </Alert>

              <div className="space-y-4">
                <div className="space-y-2">
                  <Label htmlFor="subdomain">–ü–æ–¥–¥–æ–º–µ–Ω AmoCRM</Label>
                  <Input
                    id="subdomain"
                    placeholder="mycompany"
                    value={subdomain}
                    onChange={(e) => setSubdomain(e.target.value)}
                  />
                  <p className="text-xs text-muted-foreground">
                    –ò–∑ –∞–¥—Ä–µ—Å–∞: https://<strong>mycompany</strong>.amocrm.ru
                  </p>
                </div>

                <div className="space-y-2">
                  <Label htmlFor="clientId">ID –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ (Client ID)</Label>
                  <Input
                    id="clientId"
                    placeholder="xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                    value={clientId}
                    onChange={(e) => setClientId(e.target.value)}
                  />
                </div>

                <div className="space-y-2">
                  <Label htmlFor="clientSecret">–°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á (Client Secret)</Label>
                  <Input
                    id="clientSecret"
                    type="password"
                    placeholder="xxxxxxxxxxxxxxxxxxxxxxxx"
                    value={clientSecret}
                    onChange={(e) => setClientSecret(e.target.value)}
                  />
                </div>

                <div className="space-y-2">
                  <Label htmlFor="redirectUri">Redirect URI</Label>
                  <Input
                    id="redirectUri"
                    placeholder="https://example.com"
                    value={redirectUri}
                    onChange={(e) => setRedirectUri(e.target.value)}
                  />
                  <p className="text-xs text-muted-foreground">
                    –î–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
                  </p>
                </div>

                {subdomain && clientId && redirectUri && (
                  <Alert className="bg-secondary/10 border-secondary/30">
                    <Icon name="Link" size={18} />
                    <AlertDescription>
                      <p className="font-semibold mb-2">–°—Å—ã–ª–∫–∞ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:</p>
                      <div className="flex gap-2">
                        <code className="flex-1 p-2 bg-muted/50 rounded text-xs break-all">
                          {`https://${subdomain}.amocrm.ru/oauth?client_id=${clientId}&redirect_uri=${encodeURIComponent(redirectUri)}&response_type=code&state=random_string`}
                        </code>
                        <Button
                          size="sm"
                          variant="outline"
                          onClick={() => window.open(`https://${subdomain}.amocrm.ru/oauth?client_id=${clientId}&redirect_uri=${encodeURIComponent(redirectUri)}&response_type=code&state=random_string`, '_blank')}
                        >
                          <Icon name="ExternalLink" size={16} />
                        </Button>
                      </div>
                    </AlertDescription>
                  </Alert>
                )}

                <div className="space-y-2">
                  <Label htmlFor="code">–ö–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–∏–∑ URL –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)</Label>
                  <Input
                    id="code"
                    placeholder="def50200..."
                    value={code}
                    onChange={(e) => setCode(e.target.value)}
                  />
                  <p className="text-xs text-muted-foreground">
                    –ü–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä <code>code=</code> –∏–∑ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
                  </p>
                </div>

                {error && (
                  <Alert className="bg-destructive/10 border-destructive/30">
                    <Icon name="AlertCircle" size={18} className="text-destructive" />
                    <AlertDescription className="text-destructive">
                      {error}
                    </AlertDescription>
                  </Alert>
                )}

                <Button
                  onClick={handleGetToken}
                  disabled={loading}
                  className="w-full bg-gradient-to-r from-primary to-secondary"
                >
                  {loading ? (
                    <>
                      <Icon name="Loader2" size={20} className="mr-2 animate-spin" />
                      –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞...
                    </>
                  ) : (
                    <>
                      <Icon name="Key" size={20} className="mr-2" />
                      –ü–æ–ª—É—á–∏—Ç—å Access Token
                    </>
                  )}
                </Button>
              </div>
            </div>
          ) : (
            <div className="space-y-6">
              <Alert className="bg-accent/10 border-accent/30">
                <Icon name="CheckCircle" size={18} className="text-accent" />
                <AlertDescription>
                  <strong className="text-accent">–£—Å–ø–µ—à–Ω–æ!</strong> Access Token –ø–æ–ª—É—á–µ–Ω
                </AlertDescription>
              </Alert>

              <div className="space-y-4">
                <div className="space-y-2">
                  <Label>Access Token (ACCESS_TOKEN)</Label>
                  <div className="flex gap-2">
                    <Input
                      value={accessToken}
                      readOnly
                      className="font-mono text-xs"
                    />
                    <Button
                      size="sm"
                      variant="outline"
                      onClick={() => copyToClipboard(accessToken)}
                    >
                      <Icon name="Copy" size={16} />
                    </Button>
                  </div>
                </div>

                <div className="space-y-2">
                  <Label>Refresh Token (AMOCRM_REFRESH_TOKEN)</Label>
                  <div className="flex gap-2">
                    <Input
                      value={refreshToken}
                      readOnly
                      className="font-mono text-xs"
                    />
                    <Button
                      size="sm"
                      variant="outline"
                      onClick={() => copyToClipboard(refreshToken)}
                    >
                      <Icon name="Copy" size={16} />
                    </Button>
                  </div>
                  <p className="text-xs text-muted-foreground">
                    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
                  </p>
                </div>

                <div className="space-y-2">
                  <Label>–î–æ–º–µ–Ω AmoCRM (AMOCRM_DOMAIN)</Label>
                  <div className="flex gap-2">
                    <Input
                      value={`${subdomain}.amocrm.ru`}
                      readOnly
                      className="font-mono text-xs"
                    />
                    <Button
                      size="sm"
                      variant="outline"
                      onClick={() => copyToClipboard(`${subdomain}.amocrm.ru`)}
                    >
                      <Icon name="Copy" size={16} />
                    </Button>
                  </div>
                </div>

                <div className="space-y-2">
                  <Label>Client ID (AMOCRM_CLIENT_ID)</Label>
                  <div className="flex gap-2">
                    <Input
                      value={clientId}
                      readOnly
                      className="font-mono text-xs"
                    />
                    <Button
                      size="sm"
                      variant="outline"
                      onClick={() => copyToClipboard(clientId)}
                    >
                      <Icon name="Copy" size={16} />
                    </Button>
                  </div>
                </div>

                <div className="space-y-2">
                  <Label>Client Secret (AMOCRM_CLIENT_SECRET)</Label>
                  <div className="flex gap-2">
                    <Input
                      value={clientSecret}
                      readOnly
                      className="font-mono text-xs"
                      type="password"
                    />
                    <Button
                      size="sm"
                      variant="outline"
                      onClick={() => copyToClipboard(clientSecret)}
                    >
                      <Icon name="Copy" size={16} />
                    </Button>
                  </div>
                </div>

                <div className="space-y-2">
                  <Label>Redirect URI (AMOCRM_REDIRECT_URI)</Label>
                  <div className="flex gap-2">
                    <Input
                      value={redirectUri}
                      readOnly
                      className="font-mono text-xs"
                    />
                    <Button
                      size="sm"
                      variant="outline"
                      onClick={() => copyToClipboard(redirectUri)}
                    >
                      <Icon name="Copy" size={16} />
                    </Button>
                  </div>
                </div>

                <Alert>
                  <Icon name="Info" size={18} />
                  <AlertDescription>
                    <strong>–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥:</strong>
                    <ol className="list-decimal ml-4 mt-2 space-y-1 text-sm">
                      <li>–û—Ç–∫—Ä–æ–π—Ç–µ <strong>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –°–µ–∫—Ä–µ—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞</strong></li>
                      <li>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤—ã—à–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Å–µ–∫—Ä–µ—Ç—ã</li>
                      <li><strong>–í–ê–ñ–ù–û:</strong> –î–æ–±–∞–≤—å—Ç–µ –≤—Å–µ 6 —Å–µ–∫—Ä–µ—Ç–æ–≤ –¥–ª—è –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞</li>
                      <li>–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è</li>
                    </ol>
                  </AlertDescription>
                </Alert>

                <Button
                  onClick={() => window.location.href = '/'}
                  className="w-full bg-gradient-to-r from-primary to-secondary"
                >
                  <Icon name="Home" size={20} className="mr-2" />
                  –ü–µ—Ä–µ–π—Ç–∏ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
                </Button>
              </div>
            </div>
          )}
        </CardContent>
      </Card>
    </div>
  );
};

export default AmoCRMSetup;